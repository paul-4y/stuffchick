{
    "extends": [
        "eslint:recommended",
        "plugin:import/recommended",
        "plugin:react/recommended",
        "plugin:prettier/recommended",
        "prettier",
        "prettier/react"
    ],
    "plugins": [
        "react",
        "prettier",
        "react-hooks",
        "simple-import-sort",
        "import"
    ],
    "parserOptions": {
        "sourceType": "module",
        "allowImportExportEverywhere": true
    },
    "env": {
        "browser": true,
        "jasmine": true,
        "jest": true,
        "es6": true
    },
    "rules": {
        "camelcase": "off",
        "prettier/prettier": ["error", { "singleQuote": true, "endOfLine":"auto" }],
        "react/prop-types": "off",
        "import/no-unresolved": 0,
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "sort-imports": "off",
        "import/first": "error",
        "import/newline-after-import": "error",
        "import/no-duplicates": "error",
        "simple-import-sort/sort": [
            "error",
            {
                "groups": [
                    // Packages. react related packages come first.
                    ["^react", "^@?\\w"],
                    // Internal packages.
                    ["^(@|common|features|pages|core|assets|firebase)(/.*|$)"],
                    // Side effect imports.
                    ["^\\u0000"],
                    // Parent imports. Put .. last.
                    ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
                    // Other relative imports. Put same-folder imports and . last.
                    ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
                    // styled-components imports
                    ["style.module$"],
                    // React Intl messages
                    ["messages$"],
                    // Style imports.
                    ["^.+\\.s?css$"]
                ]
            }
        ]
    },
    "settings": {
        "react": {
            "pragma": "React",
            "version": "detect"
        }
    },
    "parser": "babel-eslint"
}